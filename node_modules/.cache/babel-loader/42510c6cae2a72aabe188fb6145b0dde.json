{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport prefixes from './PrefixManager';\n\nfunction getClassName(isFluid) {\n  var className = isFluid ? 'container-fluid' : 'container';\n  return className;\n}\n\nvar Container =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Container, _super);\n\n  function Container() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Container.prototype.render = function () {\n    var fluid = this.props.fluid;\n    var className = \"\" + prefixes.container + getClassName(fluid);\n    return React.createElement(\"div\", {\n      className: className\n    }, this.props.children);\n  };\n\n  return Container;\n}(React.Component);\n\nexport { Container };","map":{"version":3,"sources":["../src/components/Container.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,QAAP,MAAqB,iBAArB;;AAOA,SAAS,YAAT,CAAsB,OAAtB,EAAkD;AACjD,MAAM,SAAS,GAAG,OAAO,GAAG,iBAAH,GAAuB,WAAhD;AACA,SAAO,SAAP;AACA;;AAED,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,EAAA,MAAA;;AAA/B,WAAA,SAAA,GAAA;;AAMC;;AALO,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACS,QAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AACR,QAAM,SAAS,GAAG,KAAG,QAAQ,CAAC,SAAZ,GAAwB,YAAY,CAAC,KAAD,CAAtD;AACA,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,EAA4B,KAAK,KAAL,CAAW,QAAvC,CAAP;AACA,GAJM;;AAKR,SAAA,SAAA;AAAC,CAND,CAA+B,KAAK,CAAC,SAArC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport prefixes from './PrefixManager';\nfunction getClassName(isFluid) {\n    var className = isFluid ? 'container-fluid' : 'container';\n    return className;\n}\nvar Container = /** @class */ (function (_super) {\n    tslib_1.__extends(Container, _super);\n    function Container() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Container.prototype.render = function () {\n        var fluid = this.props.fluid;\n        var className = \"\" + prefixes.container + getClassName(fluid);\n        return React.createElement(\"div\", { className: className }, this.props.children);\n    };\n    return Container;\n}(React.Component));\nexport { Container };\n//# sourceMappingURL=Container.js.map"]},"metadata":{},"sourceType":"module"}