{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\access-afya\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { registerUser } from \"../../actions/authActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleEmailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      errors: {}\n    }; // this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Register to access the portal\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-4 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-4 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form1\",\n      onSubmit: this.handleOnSubmit,\n      name: \"mainInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.name\n      }),\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }), errors.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.email\n      }),\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.password\n      }),\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-warning mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \" \", \"Clear\"))))));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["D:/Project/access-afya/src/components/auth/Register.js"],"names":["React","Component","PropTypes","connect","withRouter","classnames","registerUser","Register","constructor","handleNameChange","event","setState","name","target","value","handleEmailChange","email","handlePasswordChange","password","handleOnSubmit","preventDefault","newUser","state","props","history","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    // this.onChange = this.onChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  handleNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  handleEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n  handlePasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  handleOnSubmit = event => {\r\n    event.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <h4>Register to access the portal</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\r\n              <form\r\n                className=\"form1\"\r\n                onSubmit={this.handleOnSubmit}\r\n                name=\"mainInput\"\r\n              >\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.name\r\n                    })}\r\n                    placeholder=\"Name\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleNameChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control\", {\r\n                      \"is-invalid\": errors.email\r\n                    })}\r\n                    placeholder=\"Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleEmailChange}\r\n                  />\r\n                  {errors.email && (\r\n                    <div className=\"invalid-feedback\">{errors.email}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handlePasswordChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">\r\n                  Register\r\n                </button>\r\n\r\n                <button type=\"reset\" className=\"btn btn-warning mr-2\">\r\n                  {\" \"}\r\n                  Clear\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n"]},"metadata":{},"sourceType":"module"}