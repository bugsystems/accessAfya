{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport prefixes from './PrefixManager';\n\nvar viewportClassPrefix = function viewportClassPrefix(viewport) {\n  return viewport === 'xs' ? '' : '-' + viewport;\n};\n\nvar flexAlignment = {\n  row: {\n    direction: function direction(viewport) {\n      return prefixes.column + \"flex\" + viewportClassPrefix(viewport) + \"-column\";\n    },\n    vertical: {\n      top: function top(viewport) {\n        return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-start\";\n      },\n      center: function center(viewport) {\n        return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-center \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-center\";\n      },\n      bottom: function bottom(viewport) {\n        return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-end \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-end\";\n      },\n      justify: function justify(viewport) {\n        return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-between \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-stretch\";\n      }\n    }\n  },\n  col: {\n    direction: function direction(viewport) {\n      return prefixes.column + \"flex\" + viewportClassPrefix(viewport) + \"-row\";\n    },\n    vertical: {\n      top: function top(viewport) {\n        return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-start \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n      },\n      center: function center(viewport) {\n        return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-center \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n      },\n      bottom: function bottom(viewport) {\n        return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-end \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n      },\n      justify: function justify(viewport) {\n        return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-stretch \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n      }\n    }\n  },\n  horizontal: {\n    left: function left(viewport) {\n      return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-auto\";\n    },\n    right: function right(viewport) {\n      return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-auto\";\n    },\n    center: function center(viewport) {\n      return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-auto\";\n    },\n    stretch: function stretch(viewport) {\n      return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-100\";\n    }\n  }\n};\n\nfunction getDirectionForBreakpoints(directionBreakpoints) {\n  var lastBreakpoint = directionBreakpoints.xs || 'row';\n  var breakpointDirections = {\n    xs: lastBreakpoint\n  };\n  ['sm', 'md', 'lg', 'xl'].forEach(function (viewport) {\n    breakpointDirections[viewport] = directionBreakpoints[viewport] || lastBreakpoint;\n    lastBreakpoint = breakpointDirections[viewport];\n  });\n  return breakpointDirections;\n}\n\nfunction populateOuterClasses(sizeBreakpointsName, breakpointSize) {\n  var outerClassNames = [];\n\n  if (breakpointSize === 0) {\n    outerClassNames.push(prefixes.row + \"d\" + viewportClassPrefix(sizeBreakpointsName) + \"-none\");\n  } else {\n    outerClassNames.push(prefixes.row + \"d\" + viewportClassPrefix(sizeBreakpointsName) + \"-flex\");\n    var className = breakpointSize === undefined ? prefixes.row + \"col\" : prefixes.row + \"col\" + viewportClassPrefix(sizeBreakpointsName) + \"-\" + breakpointSize;\n    outerClassNames.push(className);\n  }\n\n  return outerClassNames;\n}\n\nfunction populatePlacementClasses(offsetBreakpoints, placement) {\n  var classNames = [];\n  Object.keys(offsetBreakpoints).forEach(function (offsetBreakpointName) {\n    var breakpointSize = offsetBreakpoints[offsetBreakpointName];\n    classNames.push(\"\" + prefixes.row + placement + viewportClassPrefix(offsetBreakpointName) + \"-\" + breakpointSize);\n  });\n  return classNames;\n}\n\nfunction getClassName(breakpointName, breakpointAlignment, orientation, flexDirection) {\n  var className = '';\n\n  if (flexAlignment[flexDirection][orientation]) {\n    className = flexAlignment[flexDirection][orientation][breakpointAlignment](breakpointName);\n  } else {\n    className = flexAlignment[orientation][breakpointAlignment](breakpointName);\n  }\n\n  return className;\n}\n\nfunction populateInnerClasses(alignmentBreakpoints, calculatedFlexDirections, orientation) {\n  var innerClassName = [];\n  Object.keys(alignmentBreakpoints).forEach(function (breakpointName) {\n    var flexDirection = calculatedFlexDirections[breakpointName];\n    var breakpointAlignment = alignmentBreakpoints[breakpointName];\n\n    if (breakpointAlignment) {\n      var appointedClassName = getClassName(breakpointName, breakpointAlignment, orientation, flexDirection);\n      innerClassName.push(appointedClassName);\n    }\n  });\n  return innerClassName;\n}\n\nvar Column =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Column, _super);\n\n  function Column() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Column.prototype.render = function () {\n    var _a = this.props,\n        size = _a.size,\n        direction = _a.direction,\n        verticalAlignment = _a.verticalAlignment,\n        horizontalAlignment = _a.horizontalAlignment,\n        offset = _a.offset,\n        order = _a.order,\n        className = _a.className;\n    var sizeBreakpoints = typeof size === 'number' ? {\n      xs: size\n    } : size || {};\n    var directionBreakpoints = typeof direction === 'string' ? {\n      xs: direction\n    } : direction || {};\n    var verticalAlignmentBreakpoints = typeof verticalAlignment === 'string' ? {\n      xs: verticalAlignment\n    } : verticalAlignment || {};\n    var horizontalAlignmentBreakpoints = typeof horizontalAlignment === 'string' ? {\n      xs: horizontalAlignment\n    } : horizontalAlignment || {};\n    var offsetBreakpoints = typeof offset === 'number' ? {\n      xs: offset\n    } : offset || {};\n    var orderBreakpoints = typeof order === 'number' || typeof order === 'string' ? {\n      xs: order\n    } : order || {};\n\n    if (!sizeBreakpoints.xs && sizeBreakpoints.xs !== 0) {\n      sizeBreakpoints.xs = undefined;\n    }\n\n    if (!directionBreakpoints.xs) {\n      directionBreakpoints.xs = 'row';\n    }\n\n    if (!verticalAlignmentBreakpoints.xs) {\n      verticalAlignmentBreakpoints.xs = 'top';\n    }\n\n    if (!horizontalAlignmentBreakpoints.xs) {\n      horizontalAlignmentBreakpoints.xs = 'stretch';\n    }\n\n    var outerClassName = className ? [className] : [];\n    var innerClassName = [prefixes.column + \"d-flex\"];\n    Object.keys(sizeBreakpoints).forEach(function (sizeBreakpointsName) {\n      var breakpointSize = sizeBreakpoints[sizeBreakpointsName];\n      var outerClassNames = populateOuterClasses(sizeBreakpointsName, breakpointSize);\n      outerClassName.push.apply(outerClassName, outerClassNames);\n    });\n    Object.keys(directionBreakpoints).forEach(function (directionBreakpointName) {\n      var breakpointDirection = directionBreakpoints[directionBreakpointName];\n\n      if (breakpointDirection) {\n        innerClassName.push(flexAlignment[breakpointDirection].direction(directionBreakpointName));\n      }\n    });\n    var offsetOuterClassNames = populatePlacementClasses(offsetBreakpoints, 'offset');\n    var orderOuterClassNames = populatePlacementClasses(orderBreakpoints, 'order');\n    outerClassName.push.apply(outerClassName, offsetOuterClassNames.concat(orderOuterClassNames));\n    var calculatedFlexDirections = getDirectionForBreakpoints(directionBreakpoints);\n    var verticalInnerClassNames = populateInnerClasses(verticalAlignmentBreakpoints, calculatedFlexDirections, 'vertical');\n    var horizontalInnerClassNames = populateInnerClasses(horizontalAlignmentBreakpoints, calculatedFlexDirections, 'horizontal');\n    innerClassName.push.apply(innerClassName, verticalInnerClassNames.concat(horizontalInnerClassNames));\n    return React.createElement(\"div\", {\n      className: outerClassName.join(' ').trim()\n    }, React.createElement(\"div\", {\n      className: innerClassName.join(' ').trim()\n    }, this.props.children));\n  };\n\n  return Column;\n}(React.PureComponent);\n\nexport { Column };","map":{"version":3,"sources":["../src/components/Column.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport prefixes from './PrefixManager';\nvar viewportClassPrefix = function (viewport) { return (viewport === 'xs' ? '' : '-' + viewport); };\nvar flexAlignment = {\n    row: {\n        direction: function (viewport) { return prefixes.column + \"flex\" + viewportClassPrefix(viewport) + \"-column\"; },\n        vertical: {\n            top: function (viewport) {\n                return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-start\";\n            },\n            center: function (viewport) {\n                return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-center \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-center\";\n            },\n            bottom: function (viewport) {\n                return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-end \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-end\";\n            },\n            justify: function (viewport) {\n                return prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-between \" + prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-stretch\";\n            },\n        },\n    },\n    col: {\n        direction: function (viewport) { return prefixes.column + \"flex\" + viewportClassPrefix(viewport) + \"-row\"; },\n        vertical: {\n            top: function (viewport) {\n                return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-start \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n            },\n            center: function (viewport) {\n                return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-center \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n            },\n            bottom: function (viewport) {\n                return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-end \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n            },\n            justify: function (viewport) {\n                return prefixes.column + \"align-self\" + viewportClassPrefix(viewport) + \"-stretch \" + prefixes.column + \"justify-content\" + viewportClassPrefix(viewport) + \"-start\";\n            },\n        },\n    },\n    horizontal: {\n        left: function (viewport) {\n            return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-auto\";\n        },\n        right: function (viewport) {\n            return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-auto\";\n        },\n        center: function (viewport) {\n            return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-auto \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-auto\";\n        },\n        stretch: function (viewport) {\n            return prefixes.column + \"ml\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"mr\" + viewportClassPrefix(viewport) + \"-0 \" + prefixes.column + \"w\" + viewportClassPrefix(viewport) + \"-100\";\n        },\n    },\n};\nfunction getDirectionForBreakpoints(directionBreakpoints) {\n    var lastBreakpoint = directionBreakpoints.xs || 'row';\n    var breakpointDirections = {\n        xs: lastBreakpoint,\n    };\n    ['sm', 'md', 'lg', 'xl'].forEach(function (viewport) {\n        breakpointDirections[viewport] = directionBreakpoints[viewport] || lastBreakpoint;\n        lastBreakpoint = breakpointDirections[viewport];\n    });\n    return breakpointDirections;\n}\nfunction populateOuterClasses(sizeBreakpointsName, breakpointSize) {\n    var outerClassNames = [];\n    if (breakpointSize === 0) {\n        outerClassNames.push(prefixes.row + \"d\" + viewportClassPrefix(sizeBreakpointsName) + \"-none\");\n    }\n    else {\n        outerClassNames.push(prefixes.row + \"d\" + viewportClassPrefix(sizeBreakpointsName) + \"-flex\");\n        var className = breakpointSize === undefined\n            ? prefixes.row + \"col\"\n            : prefixes.row + \"col\" + viewportClassPrefix(sizeBreakpointsName) + \"-\" + breakpointSize;\n        outerClassNames.push(className);\n    }\n    return outerClassNames;\n}\nfunction populatePlacementClasses(offsetBreakpoints, placement) {\n    var classNames = [];\n    Object.keys(offsetBreakpoints).forEach(function (offsetBreakpointName) {\n        var breakpointSize = offsetBreakpoints[offsetBreakpointName];\n        classNames.push(\"\" + prefixes.row + placement + viewportClassPrefix(offsetBreakpointName) + \"-\" + breakpointSize);\n    });\n    return classNames;\n}\nfunction getClassName(breakpointName, breakpointAlignment, orientation, flexDirection) {\n    var className = '';\n    if (flexAlignment[flexDirection][orientation]) {\n        className = flexAlignment[flexDirection][orientation][breakpointAlignment](breakpointName);\n    }\n    else {\n        className = flexAlignment[orientation][breakpointAlignment](breakpointName);\n    }\n    return className;\n}\nfunction populateInnerClasses(alignmentBreakpoints, calculatedFlexDirections, orientation) {\n    var innerClassName = [];\n    Object.keys(alignmentBreakpoints).forEach(function (breakpointName) {\n        var flexDirection = calculatedFlexDirections[breakpointName];\n        var breakpointAlignment = alignmentBreakpoints[breakpointName];\n        if (breakpointAlignment) {\n            var appointedClassName = getClassName(breakpointName, breakpointAlignment, orientation, flexDirection);\n            innerClassName.push(appointedClassName);\n        }\n    });\n    return innerClassName;\n}\nvar Column = /** @class */ (function (_super) {\n    tslib_1.__extends(Column, _super);\n    function Column() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Column.prototype.render = function () {\n        var _a = this.props, size = _a.size, direction = _a.direction, verticalAlignment = _a.verticalAlignment, horizontalAlignment = _a.horizontalAlignment, offset = _a.offset, order = _a.order, className = _a.className;\n        var sizeBreakpoints = typeof size === 'number' ? { xs: size } : size || {};\n        var directionBreakpoints = typeof direction === 'string' ? { xs: direction } : direction || {};\n        var verticalAlignmentBreakpoints = typeof verticalAlignment === 'string' ? { xs: verticalAlignment } : verticalAlignment || {};\n        var horizontalAlignmentBreakpoints = typeof horizontalAlignment === 'string' ? { xs: horizontalAlignment } : horizontalAlignment || {};\n        var offsetBreakpoints = typeof offset === 'number' ? { xs: offset } : offset || {};\n        var orderBreakpoints = typeof order === 'number' || typeof order === 'string' ? { xs: order } : order || {};\n        if (!sizeBreakpoints.xs && sizeBreakpoints.xs !== 0) {\n            sizeBreakpoints.xs = undefined;\n        }\n        if (!directionBreakpoints.xs) {\n            directionBreakpoints.xs = 'row';\n        }\n        if (!verticalAlignmentBreakpoints.xs) {\n            verticalAlignmentBreakpoints.xs = 'top';\n        }\n        if (!horizontalAlignmentBreakpoints.xs) {\n            horizontalAlignmentBreakpoints.xs = 'stretch';\n        }\n        var outerClassName = className ? [className] : [];\n        var innerClassName = [prefixes.column + \"d-flex\"];\n        Object.keys(sizeBreakpoints).forEach(function (sizeBreakpointsName) {\n            var breakpointSize = sizeBreakpoints[sizeBreakpointsName];\n            var outerClassNames = populateOuterClasses(sizeBreakpointsName, breakpointSize);\n            outerClassName.push.apply(outerClassName, outerClassNames);\n        });\n        Object.keys(directionBreakpoints).forEach(function (directionBreakpointName) {\n            var breakpointDirection = directionBreakpoints[directionBreakpointName];\n            if (breakpointDirection) {\n                innerClassName.push(flexAlignment[breakpointDirection].direction(directionBreakpointName));\n            }\n        });\n        var offsetOuterClassNames = populatePlacementClasses(offsetBreakpoints, 'offset');\n        var orderOuterClassNames = populatePlacementClasses(orderBreakpoints, 'order');\n        outerClassName.push.apply(outerClassName, offsetOuterClassNames.concat(orderOuterClassNames));\n        var calculatedFlexDirections = getDirectionForBreakpoints(directionBreakpoints);\n        var verticalInnerClassNames = populateInnerClasses(verticalAlignmentBreakpoints, calculatedFlexDirections, 'vertical');\n        var horizontalInnerClassNames = populateInnerClasses(horizontalAlignmentBreakpoints, calculatedFlexDirections, 'horizontal');\n        innerClassName.push.apply(innerClassName, verticalInnerClassNames.concat(horizontalInnerClassNames));\n        return (React.createElement(\"div\", { className: outerClassName.join(' ').trim() },\n            React.createElement(\"div\", { className: innerClassName.join(' ').trim() }, this.props.children)));\n    };\n    return Column;\n}(React.PureComponent));\nexport { Column };\n//# sourceMappingURL=Column.js.map"]},"metadata":{},"sourceType":"module"}