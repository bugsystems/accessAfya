{"ast":null,"code":"import { GET_ERRORS, SET_CURRENT_USER } from \"../actions/types\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport axios from \"axios\";\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(result => {\n    if (result) {\n      //   console.log(result.data);\n      // Create redirection\n      history.push(\"/login\");\n    }\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //Login user\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"api/users/login\", userData).then(res => {\n    if (res) {\n      // save token to local storage\n      const {\n        token\n      } = res.data; // set token to local storage\n\n      localStorage.setItem(\"jwtToken\", token); // Set to Auth header\n\n      setAuthToken(token); // decode token to get user data\n\n      const decoded = jwt_decode(token); // set current\n\n      dispatch(setCurrentUser(decoded));\n    }\n  }).catch(err => {\n    // console.log(err);\n    if (err.response) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  });\n}; // Set logined user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log out user\n\nexport const logoutUser = () => dispatch => {\n  //removing token from ls\n  localStorage.removeItem(\"jwtToken\"); //remove auth header\n\n  setAuthToken(false); // Set current user to empty object\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["D:/Project/access-afya/src/actions/authActions.js"],"names":["GET_ERRORS","SET_CURRENT_USER","jwt_decode","setAuthToken","axios","registerUser","userData","history","dispatch","post","then","result","push","catch","err","type","payload","response","data","loginUser","res","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC7DJ,EAAAA,KAAK,CACFK,IADH,CACQ,qBADR,EAC+BH,QAD/B,EAEGI,IAFH,CAEQC,MAAM,IAAI;AACd,QAAIA,MAAJ,EAAY;AACV;AACA;AACAJ,MAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACD;AACF,GARH,EASGC,KATH,CASSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEf,UADC;AAEPgB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAVZ;AAeD,CAhBM,C,CAiBP;;AAEA,OAAO,MAAMC,SAAS,GAAGb,QAAQ,IAAIE,QAAQ,IAAI;AAC/CJ,EAAAA,KAAK,CACFK,IADH,CACQ,iBADR,EAC2BH,QAD3B,EAEGI,IAFH,CAEQU,GAAG,IAAI;AACX,QAAIA,GAAJ,EAAS;AACP;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYD,GAAG,CAACF,IAAtB,CAFO,CAIP;;AAEAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EANO,CAQP;;AAEAlB,MAAAA,YAAY,CAACkB,KAAD,CAAZ,CAVO,CAYP;;AAEA,YAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B,CAdO,CAgBP;;AAEAb,MAAAA,QAAQ,CAACiB,cAAc,CAACD,OAAD,CAAf,CAAR;AACD;AACF,GAvBH,EAwBGX,KAxBH,CAwBSC,GAAG,IAAI;AACZ;AACA,QAAIA,GAAG,CAACG,QAAR,EAAkB;AAChBT,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEf,UADC;AAEPgB,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CAAR;AAID;AACF,GAhCH;AAiCD,CAlCM,C,CAoCP;;AACA,OAAO,MAAMO,cAAc,GAAGD,OAAO,IAAI;AACvC,SAAO;AACLT,IAAAA,IAAI,EAAEd,gBADD;AAELe,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAME,UAAU,GAAG,MAAMlB,QAAQ,IAAI;AAC1C;AAEAc,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB,EAH0C,CAK1C;;AAEAxB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAP0C,CAS1C;;AAEAK,EAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAZM","sourcesContent":["import { GET_ERRORS, SET_CURRENT_USER } from \"../actions/types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(result => {\r\n      if (result) {\r\n        //   console.log(result.data);\r\n        // Create redirection\r\n        history.push(\"/login\");\r\n      }\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//Login user\r\n\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"api/users/login\", userData)\r\n    .then(res => {\r\n      if (res) {\r\n        // save token to local storage\r\n        const { token } = res.data;\r\n\r\n        // set token to local storage\r\n\r\n        localStorage.setItem(\"jwtToken\", token);\r\n\r\n        // Set to Auth header\r\n\r\n        setAuthToken(token);\r\n\r\n        // decode token to get user data\r\n\r\n        const decoded = jwt_decode(token);\r\n\r\n        // set current\r\n\r\n        dispatch(setCurrentUser(decoded));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      // console.log(err);\r\n      if (err.response) {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n// Set logined user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Log out user\r\nexport const logoutUser = () => dispatch => {\r\n  //removing token from ls\r\n\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  //remove auth header\r\n\r\n  setAuthToken(false);\r\n\r\n  // Set current user to empty object\r\n\r\n  dispatch(setCurrentUser({}));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}