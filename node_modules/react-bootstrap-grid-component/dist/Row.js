import * as tslib_1 from "tslib";
import * as React from 'react';
import prefixes from './PrefixManager';
var viewportClassPrefix = function (viewport) { return (viewport === 'xs' ? '' : '-' + viewport); };
function setAlignment(alignmentValue) {
    return typeof alignmentValue === 'string' ? { xs: alignmentValue } : alignmentValue || {};
}
function populateClasses(alignmentBreakpointsType, propertyName) {
    var classNames = [];
    Object.keys(alignmentBreakpointsType).forEach(function (breakpointName) {
        var breakpointValue = alignmentBreakpointsType[breakpointName];
        classNames.push("" + prefixes.column + propertyName + viewportClassPrefix(breakpointName) + "-" + breakpointValue);
    });
    return classNames;
}
var Row = /** @class */ (function (_super) {
    tslib_1.__extends(Row, _super);
    function Row() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Row.prototype.render = function () {
        var _a = this.props, verticalAlignment = _a.verticalAlignment, horizontalAlignment = _a.horizontalAlignment, noGutters = _a.noGutters;
        var classNames = [prefixes.row + "row"];
        var verticalAlignmentBreakpoints = setAlignment(verticalAlignment);
        var horizontalAlignmentBreakpoints = setAlignment(horizontalAlignment);
        if (verticalAlignment) {
            var verticalAlignmentClassNames = populateClasses(verticalAlignmentBreakpoints, 'align-items');
            classNames.push.apply(classNames, verticalAlignmentClassNames);
        }
        if (horizontalAlignment) {
            var horizontalAlignmentClassNames = populateClasses(horizontalAlignmentBreakpoints, 'justify-content');
            classNames.push.apply(classNames, horizontalAlignmentClassNames);
        }
        if (noGutters) {
            classNames.push(prefixes.row + "no-gutters");
        }
        return React.createElement("div", { className: classNames.join(' ') }, this.props.children);
    };
    return Row;
}(React.Component));
export { Row };
//# sourceMappingURL=Row.js.map